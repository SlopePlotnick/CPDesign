# Generate Time: Tue Dec 19 11:11:57 2023
# Program File Name: input.txt
# Language Set: PL/0

program RESERVED 1 8
right ID 1 14
; EOP 1 15
const RESERVED 2 6
a ID 2 8
:= AOP 2 10
5 INT 2 11
; EOP 2 12
var RESERVED 3 4
x ID 3 6
, SOP 3 7
y ID 3 8
, SOP 3 9
b ID 3 10
, SOP 3 11
c ID 3 12
, SOP 3 13
k ID 3 14
, SOP 3 15
fibreturn ID 3 24
, SOP 3 25
return2 ID 3 32
; EOP 3 33
procedure RESERVED 4 14
fib ID 4 18
( SOP 4 19
x ID 4 20
) SOP 4 21
; EOP 4 22
var RESERVED 5 8
sum ID 5 12
; EOP 5 13
begin RESERVED 6 10
if RESERVED 7 11
x ID 7 13
<= COP 7 15
2 INT 7 16
then RESERVED 7 21
fibreturn ID 8 22
:= AOP 8 24
1 INT 8 25
else ID 9 13
begin RESERVED 10 14
sum ID 11 16
:= AOP 11 18
0 INT 11 19
; EOP 11 20
call RESERVED 12 17
fib ID 12 21
( SOP 12 22
x ID 12 23
- OOP 12 24
1 INT 12 25
) SOP 12 26
; EOP 12 27
sum ID 13 16
:= AOP 13 18
sum ID 13 21
+ OOP 13 22
fibreturn ID 13 31
; EOP 13 32
call RESERVED 14 17
fib ID 14 21
( SOP 14 22
x ID 14 23
- OOP 14 24
2 INT 14 25
) SOP 14 26
; EOP 14 27
sum ID 15 16
:= AOP 15 18
sum ID 15 21
+ OOP 15 22
fibreturn ID 15 31
; EOP 15 32
fibreturn ID 16 22
:= AOP 16 24
sum ID 16 27
end RESERVED 17 12
end RESERVED 18 8
; EOP 18 9
procedure RESERVED 20 14
test1 ID 20 20
( SOP 20 21
) SOP 20 22
; EOP 20 23
procedure RESERVED 21 18
in ID 21 21
( SOP 21 22
) SOP 21 23
; EOP 21 24
begin RESERVED 22 14
y ID 23 14
:= AOP 23 16
y ID 23 17
+ OOP 23 18
a ID 23 19
end RESERVED 24 12
begin RESERVED 25 10
y ID 26 10
:= AOP 26 12
y ID 26 13
+ OOP 26 14
a ID 26 15
; EOP 26 16
call RESERVED 27 13
in ID 27 16
( SOP 27 17
) SOP 27 18
end RESERVED 28 8
; EOP 28 9
procedure RESERVED 30 14
judge ID 30 20
( SOP 30 21
x ID 30 22
) SOP 30 23
; EOP 30 24
begin RESERVED 31 10
if RESERVED 32 11
odd RESERVED 32 15
x ID 32 17
+ OOP 32 18
1 INT 32 19
then RESERVED 32 24
return2 ID 33 20
:= AOP 33 22
1 INT 33 23
else ID 34 13
return2 ID 35 20
:= AOP 35 22
0 INT 35 23
end RESERVED 36 8
; EOP 36 9
procedure RESERVED 38 14
test2 ID 38 20
( SOP 38 21
m ID 38 22
, SOP 38 23
k ID 38 24
) SOP 38 25
; EOP 38 26
var RESERVED 39 8
i ID 39 10
, SOP 39 11
sum ID 39 14
; EOP 39 15
begin RESERVED 40 10
i ID 41 10
:= AOP 41 12
0 INT 41 13
; EOP 41 14
sum ID 42 12
:= AOP 42 14
0 INT 42 15
; EOP 42 16
while RESERVED 43 14
i ID 43 16
< COP 43 17
k ID 43 18
do RESERVED 43 21
begin RESERVED 44 14
sum ID 45 16
:= AOP 45 18
sum ID 45 21
+ OOP 45 22
m ID 45 23
; EOP 45 24
i ID 46 14
:= AOP 46 16
i ID 46 17
+ OOP 46 18
1 INT 46 19
end RESERVED 47 12
; EOP 47 13
write RESERVED 48 14
( SOP 48 15
sum ID 48 18
) SOP 48 19
; EOP 48 20
call RESERVED 49 13
judge ID 49 19
( SOP 49 20
sum ID 49 23
) SOP 49 24
end RESERVED 50 8
begin RESERVED 52 6
read RESERVED 53 10
( SOP 53 11
x ID 53 12
) SOP 53 13
; EOP 53 14
call RESERVED 54 10
fib ID 54 14
( SOP 54 15
x ID 54 16
) SOP 54 17
; EOP 54 18
write RESERVED 55 11
( SOP 55 12
fibreturn ID 55 21
) SOP 55 22
; EOP 55 23
read RESERVED 57 10
( SOP 57 11
y ID 57 12
) SOP 57 13
; EOP 57 14
call RESERVED 58 10
test1 ID 58 16
( SOP 58 17
) SOP 58 18
; EOP 58 19
write RESERVED 59 11
( SOP 59 12
y ID 59 13
) SOP 59 14
; EOP 59 15
read RESERVED 61 10
( SOP 61 11
b ID 61 12
, SOP 61 13
c ID 61 14
, SOP 61 15
k ID 61 16
) SOP 61 17
; EOP 61 18
call RESERVED 62 10
test2 ID 62 16
( SOP 62 17
b ID 62 18
+ OOP 62 19
c ID 62 20
, SOP 62 21
k ID 62 22
) SOP 62 23
; EOP 62 24
write RESERVED 63 11
( SOP 63 12
return2 ID 63 19
) SOP 63 20
end RESERVED 64 4
